@model chuong_trinh_PT.Models.SanPham

@{
    ViewBag.Title = "Them";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Them</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>SanPham</h4>

    <hr />

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.DanhMucID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                chuong_trinh_PT.Models.QuanLyDuLieuEntities db = new chuong_trinh_PT.Models.QuanLyDuLieuEntities();
                var DM = db.DanhMuc.ToList();
            }
            <select name="DanhMucID" class="form-control">
                @foreach (var item in DM)
                {
                    <option value="@item.DanhMucID">@item.TenDanhMuc</option>
                }

            </select>
            <a href="~/DanhMuc/ThemDM">Them danh muc moi</a>
            @Html.ValidationMessageFor(model => model.DanhMucID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.HangID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                var Hangs = db.Hang.ToList();
            }
            <select name="HangID" class="form-control">
                @foreach (var item in Hangs)
                {
                    <option value="@item.HangID">@item.TenHang</option>
                }

            </select>
            <a href="~/Hang/ThemHang">Them hang muc moi</a>
            @Html.ValidationMessageFor(model => model.HangID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TenSanPham, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TenSanPham, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TenSanPham, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Soluong, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Soluong, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Soluong, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MoTa, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MoTa, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MoTa, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Gia, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Gia, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Gia, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.HinhAnh, htmlAttributes: new { @class = "control-label col-md-2" })
        <lớp div="col-md-10">
            @Html.EditorFor(model => model.HinhAnh, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.HinhAnh, "", new { @class = "text-danger" })
    </div>
   
    @*<div class="form-group">
        @Html.LabelFor(model => model.HinhAnh, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" id="fileInput" class="form-control" />
            @Html.ValidationMessageFor(model => model.HinhAnh, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <img id="previewImage" src="#" alt="Image preview" style="display:none; max-width:100px; height:100px;" />
    </div>
    <script type="text/javascript">
    document.getElementById('fileInput').addEventListener('change', function (e) {
        var reader = new FileReader();
        reader.onload = function (e) {
            var img = document.getElementById('previewImage');
            img.src = e.target.result;
            img.style.display = 'block';
        }
        reader.readAsDataURL(this.files[0]);
    });
    </script>
    <div class="form-group">
        @Html.LabelFor(model => model.KhuyenMai, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.KhuyenMai, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.KhuyenMai, "", new { @class = "text-danger" })
        </div>
    </div>*@

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "danhsach")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
